@model MariosSpeciality.Models.Review

@{
    ViewData["Title"] = "Details";
}

<div class="row">
    <div class="col-md-3">
        <h2>Details of</h2>
        <h4>@Model.Author</h4>
    </div>
    <div class="col-md-6">
    </div>
    <div class="col-md-3">
        <a href="@Url.Action("Index")" class="btn btn-lg btn-default">
            <i class="fa fa-2x fa-arrow-circle-left" aria-hidden="true"></i>
            <span>Back to list</span>
        </a>
    </div>
</div>
<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Author)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.ContentBody)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.ContentBody)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Rating)
        </dd>
        <dd>
            @if (Model.AuthorImg != null)
            {
                String img64 = Convert.ToBase64String(Model.AuthorImg);
                String img64Url = string.Format("data:image/" + Model.AuthorImg + ";base64,{0}", img64); //imagetype can be e.g. gif, jpeg, png etc.
                <img src="@img64Url"  class="reviewProduct"/>
            }
        </dd>
    </dl>
    <h2>
       @Model.Author Reviewed the following product
    </h2>
</div>
<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Product.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Product.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Product.Cost)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Product.Cost)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Product.CountryOfOrigin)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Product.CountryOfOrigin)
        </dd>
        <dd>
            @if (Model.Product.ProductImg != null)
            {
                String img64 = Convert.ToBase64String(Model.Product.ProductImg);
                String img64Url = string.Format("data:image/" + Model.Product.ProductImg + ";base64,{0}", img64); //imagetype can be e.g. gif, jpeg, png etc.
                <img src="@img64Url" />
            }
        </dd>
    </dl>
</div>

<div>
    <hr />
    </a>

    <a href="@Url.Action("Index")" class="btn btn-lg btn-default">
        <i class="fa fa-2x fa-arrow-circle-left" aria-hidden="true"></i>
        <span>Back to list</span>
    </a>
</div>
