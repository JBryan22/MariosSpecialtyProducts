@model IEnumerable<MariosSpeciality.Models.Review>



@if (Model == null)
{
    <h1>@ViewBag.NotFound</h1>
    <img src="~/images/Web-under-construction.jpg" style="height: 700px; widows: 1000px;" />

}
else
{
    <h1>Reviews</h1>
    <div>
        <a href="@Url.Action("Create")" class="btn btn-lg btn-primary">
            <i class="fa fa-2x fa-plus" aria-hidden="true"> <span>    Create</span></i>
        </a>
    </div>
    foreach (var review in Model)
    {
        <div class="row">
            <div class="col-md-4">
                @if (review.AuthorImg != null)
                {
                    String img64 = Convert.ToBase64String(review.AuthorImg);
                    String img64Url = string.Format("data:image/" + review.AuthorImg + ";base64,{0}", img64); //imagetype can be e.g. gif, jpeg, png etc.
                    <a target="_blank" href="@Url.Action("Details", new { id = review.ReviewId})">
                        <img class="thumbnails deckImg" src="@img64Url" alt="reviewer image" />
                    </a>
                    <br />
                }
                <br /><br />
            </div>
            <div class="col-md-8">
                @*<div class="card-block">
                    <h3><em>@review.reviewDate.ToString("MM/dd/yyy")</em></h3>
                    <h1><em>By: @review.User.FirstName @review.User.LastName</em></h1>
                    <a href="@Url.Action("Details", new { id = review.reviewId})"><h2 class="reviewTitle" class="card-title">@review.reviewTitle</h2></a>
                </div>*@
                @*<div class="card-block">
                    <h1>@review.reviewContent.Substring(0, 150)...</h1>
                </div>*@
            </div>
        </div>

    }
}
